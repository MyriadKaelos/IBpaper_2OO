Option D — Object-oriented programming
    14. A large zoo has a collection of many individual animals of many different species. A computer
    program is being developed to keep track of all of the animals in the collection.
    Because there are so many different kinds of species in the collection, and each species has
    some unique characteristics and some characteristics in common with other species, it was
    decided that the computer program would contain objects that correspond to different levels of
    the taxonomy used by biologists to classify all life forms. A genus is composed of a group of
    species that have similar common characteristics, as shown in the diagram.

    A separate object, Specimen, is used to represent each individual animal in the zoo.

        (a) State the relationship between the Genus and Species objects. [1]
            The Genus is the parent class of the Species class. The Species class inherits methods
            and variables from the Genus class, as well as the constructor throught the 'super()'
            method. Although the Species class can have its own methods and variables, it also has
            the methods and variables of the Genus class.
        (b) State the relationship between the Species and Specimen objects. [1]
            The Specimen class utilizes the Species class by receiving a Species as part of the
            specimen's construction parameters. The specimen attribute of the Species class has
            all of the methods and variables that a specimen has, and therefore can be used in
            exactly the same way.
        (c) Construct the unified modelling language (UML) diagram for the Species object. [4]
        (d) Outline two ways in which the programming team can benefit from the way the
        relationships between the three objects, Specimen, Species and Genus, have been
        represented in the code. [4]
            * Avoiding duplicate code
            * Simplifies testing / allows programmers to work separately on their own classes
            * Makes development faster.
            * It would reflect the real world
        (e) The Genus class implements a toString() method that produces an output string that is
        different from the one produced by the toString() method in the Species class.
        Consider the following code fragment:

        Species human = new Species ( "homo", "sapiens" );
        System.out.println( human.toString() );

            (i) Outline why calling the toString() method in this code does not cause an error. [2]
                The Species class has a version of the 'toString()' method that overrides the
                similar method in the Genus class. This means that, although it may have the same
                name, it will use its own toString method instead of its Parent's toString method.
            (ii) Identify the term for this property. [1]
                'Polymorphism'

    15. (a) Define the term encapsulation. [1]
            Encapsulation, (in programming), is the property that most classes have in that they
            'encapsulate' all of the data, variables, methods, etc... within their class.
            * This data can then be accessed from outside classes via dot notation.
        (b) Outline two benefits provided by encapsulation. [4]
            Encapsulation protects variables and methods of one class from variables
            and methods from other classes. * Data hiding and Security
            Encapsulation also allows for clearer and more organized code, (split into smaller
            classes rather than one big class). * Ease of Maintenance
        (c) Identify an accessor method in the Specimen class. [1]
            'getName()'
        (d) Identify an instance variable in the Specimen class. [1]
            'name'
        (e) Construct code for the Genus object including a constructor, accessor methods and a
        toString() method. [3]
            **See Genus Class for code**
        The Specimen object could have been designed as a sub-class of the Species object.

        (f) Outline one advantage and one disadvantage of having the Specimen object as a
        sub-class of the Species object. [4]
            The specimen class would be able to automatically inherit all of the properties
            that a species could have, meaning that one could shorten and simplify the code
            be removing the 'toa' property from the specimen class.
            On the other hand, it may create complexities in the code considering there
            would now be three different types of names that a Specimen would have, ie:
            Genus, Species, and Specimen names. This would create unnecessary complexity.

    16. (a) Outline the changes that would be needed in order to add a description of each animal’s
        individual markings to the program. [4]
            A Specimen would be the class that would hold different markings.
            One would need a function which created a string explaining the markings to a user.
            Either an array, class, or Object would need to be created to contain these various markings.
            There would need to be a set and a get function that was able to retrieve markings from the Specimen class.
                These set and get functions may need to have capabilities such as 'add' or 'remove' depending on the implementation.

        An array is used to store the Specimen objects corresponding to the animals in the zoo.

        (b) Construct a method countSpecimens( Specimen[] animals, Species s ) that
        will output the number of specimens of the given species in the zoo.

            public int countSpecimens( Specimen[] animals, Species s ) {
                int count = 0;
                for(int i = 0; i < animals; i ++) {
                    if(animals[i].toa == s) {
                        count++;
                    }
                }
                return count;
            }

        (c) Construct an algorithm in pseudocode for listSpecies( Specimen[] animals ),
        which will generate a list of the different species in the zoo. [6]

            public Species[] listSpecies( Specimen[] animals ) {
                Species[] s = new Species[0];
                for(int i = 0; i < animals; i ++) {
                    for(int o = 0; o < s.length; o ++) {
                        boolean isSame = false;
                        if(s[o] != animals[i].toa) {
                            isSame = true;
                        }
                        if(isSame) {
                            Species[] save = s;
                            s = new Species[save.length+1];
                            for(int e = 0; e < save.length; e++) {
                                s[e] = save[e];
                            }
                            s[save.length] = animals[i].toa;
                        }
                    }
                }
                return s;
            }

    17. For some operations, it will be more convenient to use a linked list to hold the Specimen
    objects corresponding to the animals in the zoo. In answering this question, you should use the
    JETS LinkedList class and may use the following methods.

        addHead()
        getHead()
        addTail()
        getTail()
        getNext()
        insert()
        delete()
        isEmpty()
        isFull()

        (a) Identify the features of an abstract data type (ADT). [2]
        (b) Construct a method, makeList(), that builds a linked list containing the Specimen
        objects from an input array.
            *
            *LinkedList makeList( Specimen [] animals ) {
            *   LinkedList llist = new LinkedList();
            *   for (int i=0; i<animals.length; i++ ) {
            *       llist.addHead( animals[i] );
            *   }
            *   return llist;
            *}
        (c) Construct a method, makeSpeciesList( LinkedList animals ), that will return
        a linked list of Species objects, one for each animal specimen present in the zoo.
        Note that the list returned will contain duplicate Species objects if the zoo has more than
        one specimen of a given species. [6]
            *Award up to [6 marks max].
            *Award [1 mark] for correctly creating a new LinkedList object to hold the species; CHECK
            *Award [1 mark] for correctly looping through the specimen objects in the input
            *list;
            *Award [1 mark] for retrieving the species object for each individual animal;
            *Award [1 mark] for inserting each species object into the new linked list;
            *Award [1 mark] for returning the new linked list;
            *Award [1 mark] for not failing if the input list is empty;
            LinkedList makeSpeciesList( LinkedList animals ) {
                LinkedList llist = new LinkedList();
                Specimen specimen = (Species) animals.getHead();
                while(specimen != null) {
                    llist.addHead(specimen.getTOA());
                    specimen = (Species) specimen.getHead();
                }
                return llist;
            }
        (d) Construct a method, makeSpeciesListUnique( LinkedList allSpecies ), that
        will take a linked list of Species objects as described in (c) and produce a new linked list
        that contains only one Species object for each species in the zoo. [8]
            LinkedList makeSpeciesListUnique( LinkedList allSpecies ) {
                LinkedList llist = new LinkedList();
                Species individual = (Species) allSpecies.getHead();
                while(individual != null) {
                    boolean foundSpecies == false;
                    Species saveSpecies = llist;
                    while(saveSpecies != null) {
                        if(saveSpecies==individual) {
                            foundSpecies == true;
                        }
                        saveSpecies
                    }
                    if(!foundSpecies) {
                        llist.addHead(individual)
                    }
                }
                return llist;
            }